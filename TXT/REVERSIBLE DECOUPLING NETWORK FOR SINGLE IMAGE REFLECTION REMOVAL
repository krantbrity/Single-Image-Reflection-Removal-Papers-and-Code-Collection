# 可逆解耦网络用于单图像反射去除

**预印本**

**Hao Zhao**∗, **Mingjia Li**∗, **Qiming Hu**, and **Xiaojie Guo**†  
天津大学智能与计算学院，中国  
{student_zh,mingjiali,huqiming}@tju.edu.cn, xj.max.guo@gmail.com

## 摘要

近期基于深度学习的单图像反射去除方法展现出了令人瞩目的进展，主要归功于两个原因：1）利用识别预训练特征作为输入，2）设计双流交互网络。然而，根据信息瓶颈原理，高级语义线索在逐层传播过程中往往会被压缩或丢弃。此外，双流网络中的交互在不同层之间遵循固定模式，限制了整体性能。为了解决这些限制，我们提出了一种名为可逆解耦网络（RDNet）的新颖架构，该架构采用可逆编码器来保护有价值的信息，同时在前向传播过程中灵活解耦传输和反射相关特征。此外，我们定制了一个传输率感知提示生成器来动态校准特征，进一步提升性能。大量实验证明了RDNet相对于现有SOTA方法在五个广泛采用的基准数据集上的优越性。我们的代码将公开发布。

## 1 引言

![图1：我们与先前SOTA方法在PSNR上的定量比较，我们在所有5个数据集上都取得了新纪录。注意每个轴的尺度都由其第二好的值进行了归一化。最佳和第二最佳PSNR显示供参考。](图1说明)

反射是通过透明介质（如玻璃）拍摄时常见的叠加因素。在这种情况下，捕获的图像I通常包含传输T（介质后的场景）和反射R（反射场景）的混合（Nayar et al., 1997），可以简单表示为I = T + R。反射的存在经常阻碍传输层中的重要信息，影响下游计算机视觉任务的性能，如立体匹配、光流和深度估计（Tsin et al., 2003；Yang et al., 2016；Costanzino et al., 2023）。因此，需要单图像反射去除/分离（SIRR）来从单个输入图像中解耦传输和反射组件。然而，这个问题是严重的病态问题，因为满足I = T̂ + R̂的可能分解T̂和R̂有无穷多种。换句话说，如果没有有效的先验或分解指导，确定哪种组合是最优的是极具挑战性的。

近年来，基于学习的方法在这一领域取得了巨大进步（Zhang et al., 2018；Wei et al., 2019；Li et al., 2023；Hu & Guo, 2023；Zhong et al., 2024）。这些方法的一个关键共识是通过大规模识别预训练模型利用分层语义表示，这些表示在分解过程中充当先验或正则化器。一项开创性的深度学习工作（Zhang et al., 2018）通过超列（hypercolumn）概念利用预训练VGGNet（Simonyan & Zisserman, 2015）的中间特征来帮助区分混合物中的传输层和反射层。最初来自神经科学，术语"超列"指的是视觉皮层中在多种感受野大小下处理视觉刺激的功能单元（Hubel & Wiesel, 1974）。这个概念首次被应用于对象分割和定位，通过插值和堆叠从网络不同层提取的特征（Hariharan et al., 2015b）。然而，简单地将堆叠的高维层次结构映射到一组低维特征作为后续过程的输入，不可避免地导致相当大的语义信息损失。

具有SOTA性能的先前工作（Hu & Guo, 2021; 2023）表明，来自源图像的所有信息对于任务都是有价值的。两个组件可以通过彼此之间的信息交换来优化。对于任何可行的分解(T̂, R̂)，以下关系成立：

T̂ := T - Q, R̂ := R + Q s.t. I = T̂ + R̂ (1)

其中Q表示要交换的信息。具体来说，YTMT（Hu & Guo, 2021）和DSRNet（Hu & Guo, 2023）分别通过激活函数和通道分割选择Q。尽管有效，但在它们的交互设计中信息保存并不完全得到保证，即YTMT中线性层引起的信息瓶颈和DSRNet门控机制中的乘性减少。

为了避免上述风险，可逆单元（Gomez et al., 2017b）专门设计用于保存信息，可能提供一个可行的解决方案。特别是，构建耦合的可逆单元自然地适合以下情况：

前向过程：
```
T̂₂ := T̂₁ + F(R̂₁)
R̂₂ := R̂₁ + G(T̂₂)
```

逆向过程：
```
T̂₁ := T̂₂ - F(R̂₁)  
R̂₁ := R̂₂ - G(T̂₂)
```

其中F(·)和G(·)可以是任何网络模块，下标表示可逆单元前后层估计的不同版本。为了简单起见，我们也使用T̂和R̂来表示相应的深度特征，这基于这样的理解：如果特征被充分解耦，将它们映射回图像空间就变成了一个简单的任务。

尽管使用可逆模块可以解决相同尺度特征交互中的信息丢失问题，但在前馈过程中保存多尺度信息仍然是一个挑战。除了超列（Zhang et al., 2018）和渐进层次融合（Hu & Guo, 2023）之外，一个直观的方案是在每个尺度堆叠可逆模块以促进前向传播，同时包含跨尺度连接以确保有效的多尺度交互和融合。与这个想法一致的直接方法是MAXIM（Tu et al., 2022）（不考虑信息丢失），它在多尺度层次结构中采用完全连接机制。类似的想法也可以在HRNet（Sun et al., 2019）中找到。然而，对高维特征的操作在计算上是昂贵的且内存密集的。

受GLOM（Hinton, 2023）启发，该方法采用部分-整体层次结构来表示具有多列的图像，并体现自下而上和自上而下的交互以减轻与完全连接层相关的计算负担，我们将多尺度特征处理器集成到单个子网络中，称为"列"。此外，我们并行集成列并以自下而上和自上而下的方式构建交互。值得注意的是，GLOM中用于相邻列之间同级交互的缩放残差连接仍然可能导致信息丢失。为了解决这个问题，我们通过整合多级可逆连接来扩展残差连接，这升级了原始的可逆单元（Gomez et al., 2017a）。

与由信息瓶颈原理指导的结构设计（Tishby & Zaslavsky, 2015；Hu & Guo, 2021）相比，我们提出的框架基于其信息保持模块（可逆单元）的坚实基础，通过分类和重新组合原始信息而不是仅仅选择和丢弃元素来学习解耦表示（Desjardins et al., 2012；Bengio et al., 2013）。此外，它保留多尺度信息并促进跨尺度交互。此外，在现实世界场景中，反射模式随着多种因素而变化，如透明表面的折射率、颜色粒度和视角（Schechner et al., 1999）。为了增强对反射强度变化的鲁棒性，我们进一步为模型配备了自适应传输率感知提示生成器。

鉴于这些考虑，本文提出了一个名为可逆解耦网络（简称RDNet）的网络。本工作的主要技术贡献是双重的：

• 我们重新审视了单图像反射去除/分离过程中分层语义信息的保存和跨级交互问题。为了解决这些挑战，我们引入了基于部分-整体层次结构的多列可逆编码器，配以定制的层次解码器。这种设计确保了丰富语义的更好保留，有效缓解了SIRR任务的病态性质。

• 为了处理现实世界场景中变化的反射参数，我们引入了自适应传输率感知提示生成器，它在训练期间从数据集学习通道缩放因子，并在测试时利用这些知识作为先验。它指导分解网络选择更准确的传输-反射比例，显著增强模型的泛化能力。

进行了广泛的实验来验证我们设计的有效性，并揭示其在定性和定量上相对于其他SOTA替代方案的优越性（见图1的简要总结）。值得注意的是，我们的方法也在野外案例上实现了鲁棒泛化，强调了其在现实世界应用中的实用价值（如图4所示）。

## 2 相关工作

### 2.1 单图像反射去除

**物理公式化**。在主流的反射去除框架中（Levin & Weiss, 2007），图像I通常被分解为传输T和反射R组件，表示为I = T + R。然而，在现实世界场景中，这两层在叠加过程中可能受到扩散和其他环境影响的衰减（Wan et al., 2020）。为了考虑这种复杂性，提出了一种增强建模：I = αT + βR，其中系数α和β提供了对变化条件的适应性（Wan et al., 2018；Yang et al., 2018）。然而，线性叠加假设经常失效，特别是在过度曝光的情况下（Wen et al., 2019）。为了解决这个问题，引入了alpha消光图W的概念，导致模型重新表述为I = W ⊙ T + W̄ ⊙ R，其中W̄ = 1 - W。虽然这种调整提高了模型的灵活性，但也增加了已经病态问题的复杂性。

上述模型难以涵盖多样的反射现象，突出了开发通用解决方案的挑战。Hu和Guo（Hu & Guo, 2023）通过引入残差项提供了叠加过程的更全面描述：I = T̃ + R̃ + φ(T, R)，其中T̃和R̃表示在叠加和退化后I内的改变的传输和反射信息，如相机传感器捕获的。项φ(T, R)表示重建中的残差信息，由衰减和过度曝光等因素产生。然而，当前方法主要使用上述建模来合成训练数据，期望对现实世界数据的泛化性。但是，它们缺乏对所涉及物理参数的明确估计。此外，基于距离的损失函数如平均绝对误差（MAE）和均方误差（MSE）未能考虑全局颜色和强度偏移。明确估计投影图像的退化率可以改善性能。更详细的解释在第3.2节中提供。

**基于深度学习的建模**。Zhang等人（Zhang et al., 2018）通过利用从预训练VGG-19网络提取的超列特征，结合感知损失和对抗损失，增强了语义感知。ERRNet（Wei et al., 2019）使用错位对作为训练数据进一步发展。但它忽略了反射层，可能增加传输恢复中的歧义性。Li等人（Li et al., 2023）提出了RAGNet，这是一个两阶段网络，首先估计反射组件，然后使用它来指导传输预测。最近，Hu & Guo（2021）提出的YTMT策略通过同时恢复两层的双流交互网络平等对待两个组件。然而，注意到物理公式化中隐藏的问题，它们的交互模块依赖于线性假设，这可能限制其性能上限。其他方法，如BDN（Yang et al., 2018）和IBCLN（Li et al., 2020）采用具有标量权重的反射模型来迭代估计两个组件，确保反射不会太微弱。然而，两个组件之间的交互被忽略，有时导致传输和反射中严重的重影效应。Dong等人（Dong et al., 2021）开发了一个迭代网络，在每步估计概率反射置信图。DSRNet（Hu & Guo, 2023）在两阶段结构设计中引入了相互门控交互机制。在第一阶段，网络逐步融合提取的分层特征，而第二阶段专注于进一步分解这些特征。然而，由于门控机制中的乘性减少，信息丢失问题仍然存在。此外，在第一阶段孤立的渐进分层融合并不能完全确保分层信息在后续分解过程中得到保存。Zhu等人（Zhu et al., 2024）提出了用于估计反射位置的最大反射滤波器并引入了大型数据集，但他们同样忽略了两层之间的交互。我们提出的RDNet通过整合可逆连接和多列设计来解决现有方法的缺点。

### 2.2 可逆网络

可逆神经网络旨在通过启用从输出恢复原始输入来防止信息丢失，从而保持数据完整性。Deco和Brauer（Deco & Brauer, 1994）引入了一种可逆架构，通过残差设计保证数据保存，该设计生成具有单位对角元素的下三角雅可比矩阵。基于这个概念，Dinh等人（Dinh et al., 2015）开发了NICE框架，在数据和潜在空间之间采用非线性双射变换。然而，这种设计只允许体积保持映射。Dinh等人（Dinh et al., 2017）通过提出不需要体积保持的可逆变换扩展了这个想法。而Gomez等人（Gomez et al., 2017a）将可逆网络的概念与ResNet架构相结合，确保每层的激活可以从后续层的激活中导出。这种方式启用了无需在内存中存储激活的反向传播，除了少数非可逆层。

**用于低级视觉的可逆网络**。可逆CNN已被有效应用于各种低级任务，包括压缩（Liu et al., 2021）、增强（Zhu et al., 2022；Wang et al., 2022；Li et al., 2022）和恢复（Huang & Dragotti, 2022；Zhu et al., 2023；Yao et al., 2023）。这些解决方案通常以生成方式采用可逆网络作为共享编码器-解码器，其中生成新纹理来补充在退化过程中丢失的信息。然而，在反射去除任务中，目标结果（传输图像）与反射混合而不是丢失。这个任务需要精确解耦输入图像组件而不是生成新纹理。据我们所知，我们的工作是第一个专门为反射去除设计可逆架构的。

## 3 方法论

在本节中，我们介绍提出的RDNet的关键组件，其整体结构如图2所示。具体来说，它由三个主要模块组成：多列可逆编码器（MCRE）、传输率感知提示生成器（TAPG）和层次解码器（HDec）。预训练层次提取器（PHE）从输入图像捕获语义丰富的分层表示并将它们传输到MCRE中第一列的每个级别。同时，TAPG从数据中学习通道级传输-反射比例先验，将这些学习的基本参数映射到指导MCRE网络的提示中。最后，MCRE中的每列都采用HDec来编码分层信息，提供有效的侧向指导（Qin et al., 2020）。来自最后一列的解码层次产生最终结果。

![图2：我们RDNet的整体结构，输入被馈送到传输率感知提示生成器、预训练层次提取器和列嵌入中。提示生成器的输出将被传输到列网络中。在列之间交互后，每列使用单独的解码器来获得一对图像层。](图2说明)

### 3.1 多尺度可逆列编码器

如图2所示，我们提出的多列可逆编码器（MCRE）采用了与端到端模型（Zhang et al., 2018；Wei et al., 2019）不同的架构，通过整合多个子网络，每个子网络接收由传输率感知提示生成器（TAPG）调制的列嵌入。该模型由列嵌入层和编码多尺度信息的多个列组成。

在MCRE中，列之间的信息传播通过两种主要机制处理：同级可逆连接（图中蓝色实线表示）促进同级列之间的信息保存，以及跨级连接（红色虚线表示）配合双向交互级别，实现相邻级别之间的交互。这种方法有效地解耦多尺度特征至Level-3。作为例外，Level-4缺乏相应的跨级连接，符合端级结构。MCRE内的初始列接受PHE提取的分层信息，确保语义丰富的表示。后续的多列可逆设计确保分层信息在整个分解网络中的无损传播。

具体来说，我们的列嵌入层采用7×7卷积层，步长为2，产生2×2重叠块F₋₁用于后续处理。对于第i列（i ∈ {1, 2, ..., N}），每个级别特征F^i_j，j ∈ {0, 1, 2}从当前列的较低级别接收信息F^i_{j-1}，从前一列的较高级别接收F^{i-1}_{j+1}。收集的特征进一步与当前级别的信号F^{i-1}_j融合。上述级别j的操作表示为：

F^i_j = ω(θ(F^i_{j-1}) + δ(F^{i-1}_{j+1})) + γF^{i-1}_j (3)

其中ω表示网络操作，θ和δ分别表示下采样和上采样操作。γ项是一个简单的可逆操作。在我们的实现中，我们利用可学习的可逆通道级缩放作为可逆操作γ。这个连接是无信息损失的，因为可以通过逆运算检索F^{i-1}_j：

F^{i-1}_j = γ^{-1}[F^i_j - ω(θ(F^i_{j-1}) + δ(F^{i-1}_{j+1}))] (4)

值得注意的是，对于每列的第一级，我们定义F^i_{-1} := F_{-1}。此外，由于最后一级不接收任何更高级别的特征，因此丢弃δ(F^{i-1}_{j+1})项。

**层次解码器**。我们的层次解码器整合来自所有尺度的分层代码以生成最终输出。我们利用几个级别解码器（LD）将具有较小分辨率的高维层次结构解释为具有较大分辨率的低维层次结构。LD中的上采样算子由pixel-shuffle（Shi et al., 2016）实现，这是缩放前后的信息一致算子。然后上采样特征与来自前一尺度的信息通过乘法调制融合。最终，最后的LD通过另一个pixel-shuffle上采样操作产生层残差（T̂_res和R̂_res），并与原始输入连接以获得层分解T̂和R̂。

### 3.2 传输率感知提示生成器

先前的SIRR方法往往表现出有限的泛化能力，这是由于现实世界反射场景中光学因子的固有复杂性和可变性，以及训练数据有限的限制。这种限制可以在我们收集的现实世界测试样本中观察到，如图4所示。同时，在现实世界和合成数据中，颜色/强度经常由于反射覆盖传输而受损，传输T本身被传输率a退化。在图像恢复任务中，真实值通常是干净的图像。但是，由于现实世界场景中的颜色/照明偏移，经常出现线性偏差的输入/结果。这种现象在附录A中进一步详述。

为了解决上述问题，我们使用在ImageNet-1k（Deng et al., 2009）上预训练的ConvNext模型（Liu et al., 2022）的简化版本开发了传输率估计器。给定输入图像I ∈ R^{3×H×W}，我们的传输率估计器预测六个参数：α_{R,G,B}，β_{R,G,B}，使得对于每个i ∈ {R, G, B}，‖α_iT + β_i - I‖₂最小化。当使用提示生成器生成的六个参数测试输入图像时，我们可以在四个基准数据集（Real20、Objects、Postcard和Wild）上获得24.34dB的平均PSNR，超过了Dong等人（Dong et al., 2021）的先前最先进方法。这个结果证实了我们估计的传输率的有效性。

一旦估计出传输率因子α_{R,G,B}，β_{R,G,B}，就使用三层MLP生成指导MRCE的提示，产生提示P ∈ R^{C×H×W}，其中C表示补丁嵌入层的输出维度，在我们的工作中设置为64。随后，提示用于调制列嵌入层的中间特征F为P ⊙ F，这允许网络动态适应每个输入图像的特定特征，从而提高反射去除的准确性。

### 3.3 训练目标

我们的模型经历两个训练阶段。在第一阶段，我们训练传输率估计器。完成后，我们固定分类器并继续训练主模型以及提示生成器。这种训练方案确保传输率感知提示生成器和主模型协调工作以完成任务，产生鲁棒的解决方案。

我们采用内容损失和感知损失来处理任务，在聚合到最终结果之前，使用以下损失函数评估每列产生的每对图像。

**内容损失**。内容损失确保输出图像与真实训练数据之间的一致性。在图像域中，我们采用均方误差（MSE）损失。遵循先前的工作（Hu & Guo, 2023; 2021），我们通过鼓励输出和真实值在梯度域中的一致性进一步正则化模型，写作：

L_cont := c₀‖T̂ - T‖₂² + c₁‖R̂ - R‖₂² + c₂‖∇T̂ - ∇T‖₁ (5)

其中‖·‖₁和‖·‖₂分别表示ℓ₁和ℓ₂范数。在训练的第一阶段，我们设置c₀ = 1，c₁ = 0，c₂ = 0。在第二阶段，这些值调整为c₀ = 0.3，c₁ = 0.9，c₃ = 0.6。

**感知损失**。为了增强模型产生图像的感知质量，我们最小化预测元素和真实参考特征之间的ℓ₁差异。这种比较在ImageNet数据集上预训练的VGG-19网络的'conv2_2'、'conv3_2'、'conv4_2'和'conv5_2'层进行。将第i层的特征表示为φᵢ(·)，感知损失计算为：

L_per := Σⱼ ωⱼ‖φⱼ(T̂) - φⱼ(T)‖₁ (6)

其中ωⱼ是每层的加权系数。总损失为：

L := L_cont + wL_per (7)

其中w = 0.01是经验设定的。

## 4 实验验证

### 4.1 实现细节

我们的模型在PyTorch（Paszke et al., 2019）中实现，使用Adam优化器（Kingma & Ba, 2015）在RTX 3090 GPU上训练20个epoch。学习率初始化为10⁻⁴，在整个训练阶段保持固定，批量大小为2。训练数据集包括真实和合成图像。为了与先前工作保持一致，我们在两种常用数据设置下评估模型性能：a）来自（Hu & Guo, 2021；Wei et al., 2019）和（Li et al., 2023）的设置，包括来自（Zhang et al., 2018）的90个真实图像对和来自PASCAL VOC数据集（Everingham et al., 2010）的7,643个合成对；b）来自（Hu & Guo, 2023）和（Dong et al., 2021）的设置，包括（Li et al., 2020）提供的200个额外真实图像对。对于数据合成，我们遵循DSRNet（Hu & Guo, 2023）的管道和物理模型，表示为I = αT + βR - T ⊙ R。稍微地，我们通过为R、G和B通道采样个别的α和β来修改这种方法。这种调整旨在防止传输率估计器收敛到平凡解。PHE的参数由预训练的FocalNet（Yang et al., 2022）初始化。

### 4.2 性能评估

为了比较，我们在四个真实世界数据集上评估了七种最先进的方法：ERRNet（Wei et al., 2019）、IBCLN（Li et al., 2020）、RAGNet（Li et al., 2023）、Dong等人（Dong et al., 2021）、YTMT（Hu & Guo, 2021）、DSRNet（Hu & Guo, 2023）、Zhu等人（Zhu et al., 2024），包括Real20（Zhang et al., 2018）和SIR2数据集的三个子集（Wan et al., 2017），对于Nature Dong等人（2021）数据集，我们比较IBCLN、ERRNet、YTMT、DSRNet和Zhu等人。

**定量比较**。定量结果显示在表1中。我们直接使用作者公开提供的代码和预训练权重来获得所有定量结果。为了进行公平比较，使用和不使用Nature数据集额外数据的方法分别进行比较。显然，我们的方法在所有测试数据集上相对于其他竞争对手显示出优越性，仅在Objects数据集上的SSIM方面略逊于Zhu等人。我们的方法取得了令人瞩目的提升，特别是在包含现实条件下收集的困难案例的Real20数据集上，意味着我们的方法能够更好地适应现实世界条件。其他三个数据集包含各种场景、照明条件和玻璃厚度，意味着我们的方法在大多数条件下表现更好。实验结果表明，我们提出的SIRS方法能够适应复杂情况并具有更强的泛化能力。

**表1：各种方法在四个真实世界基准数据集上的定量结果。最佳结果以粗体突出显示，第二最佳结果带下划线。**

| 方法 | Real20 (20) | Objects (200) | Postcard (199) | Wild (55) | 平均 |
|------|-------------|---------------|----------------|-----------|------|
|      | PSNR | SSIM | PSNR | SSIM | PSNR | SSIM | PSNR | SSIM | PSNR | SSIM |
| **w/o Nat.** |
| ERRNet | 22.89 | 0.803 | 24.87 | 0.896 | 22.04 | 0.876 | 24.25 | 0.853 | 23.53 | 0.879 |
| IBCLN | 21.86 | 0.762 | 24.87 | 0.893 | 23.39 | 0.875 | 24.71 | 0.886 | 24.10 | 0.879 |
| RAGNet | 22.95 | 0.793 | 26.15 | 0.903 | 23.67 | 0.879 | 25.53 | 0.880 | 24.90 | 0.886 |
| YTMT | 23.26 | 0.806 | 24.87 | 0.896 | 22.91 | 0.884 | 25.48 | 0.890 | 24.05 | 0.886 |
| DSRNet | 24.23 | 0.820 | 26.28 | 0.914 | 24.56 | 0.908 | 25.68 | 0.896 | 25.40 | 0.905 |
| **Ours** | **24.43** | **0.835** | **25.76** | 0.905 | **25.95** | **0.920** | **27.20** | **0.910** | **25.95** | **0.908** |
| **w Nat.** |
| Dong et al. | 23.34 | 0.812 | 24.36 | 0.898 | 23.72 | 0.903 | 25.73 | 0.902 | 24.21 | 0.897 |
| DSRNet | 23.91 | 0.818 | 26.74 | 0.920 | 24.83 | 0.911 | 26.11 | 0.906 | 25.75 | 0.910 |
| Zhu et al. | 21.83 | 0.801 | 26.67 | **0.931** | 24.04 | 0.903 | 26.49 | **0.915** | 25.34 | 0.912 |
| **Ours** | **25.58** | **0.846** | **26.78** | 0.921 | **26.33** | **0.922** | **27.70** | 0.915 | **26.65** | **0.917** |

为了进行全面比较，我们在表2中展示了在Nature数据集上获得的结果，该数据集包含20个真实世界样本。我们的方法取得了最佳PSNR和第二最佳SSIM，SSIM仅边际下降0.004。这些结果进一步强调了我们方法在现实世界场景中的优越性。

**表2：Nature数据集上的定量结果。竞争对手都使用Nature数据集的额外数据进行训练**

| ERRNet | IBCLN | YTMT | DSRNet | Zhu et al. | Ours |
|---------|--------|------|---------|------------|------|
| PSNR | 22.18 | 23.57 | 23.85 | 25.22 | 26.04 | **26.21** |
| SSIM | 0.756 | 0.783 | 0.810 | 0.832 | **0.846** | 0.842 |

**定性比较**。定性比较显示在图3和图4中，附录中提供了更多视觉示例。图3中的第一个案例展示了一个高反射物体，由于其强度，这对反射去除技术提出了重大挑战。我们的方法成功消除了反射物体，准确揭示了底层纹理和颜色信息。这种性能优于其他方法，突出了我们方法在处理复杂现实世界反射方面的有效性。相比之下，ERRNet、RAGNet、Dong等人、YTMT、DSRNet和Zhu等人难以去除该物体，几乎完全保持不变。虽然IBCLN部分去除了反射，但未能恢复底层颜色信息，导致不完整的结果。这个例子清楚地展示了我们方法在准确识别和去除甚至强烈和复杂反射方面的先进能力，进一步证明了其在现实世界场景中的鲁棒性。

第二个例子进一步展示了我们方法在处理分布在图像中的反射方面的熟练程度。在这里，反射是复杂的并覆盖大面积，其他方法未能有效去除。相比之下，我们的方法准确瞄准并消除了大部分反射，保持了非反射元素的完整性。

![图3：Wild数据集样本的定性比较。请放大查看更多细节。更多视觉结果可在附录中找到。](图3说明)

图4展示了我们方法在现实世界场景中的鲁棒性。这两个案例是我们在现实生活条件下捕获的。在第一个例子中，密集反射覆盖汽车窗户，这是竞争方法基本上未能解决的挑战，只有Zhu等人实现了部分去除。然而，我们的方法几乎完全分离了反射，产生了更视觉上吸引人的结果。在第二个例子中观察到类似的结果，我们的方法成功去除了几乎所有反射。相比之下，所有其他方法都难以有效处理这种场景。这些例子展示了我们解耦范式的鲁棒性，确认了其在现实世界场景中的有效性。

![图4：现实世界案例的定性比较。请放大查看更多细节。](图4说明)

这些结果证明了我们解耦例程的有效性，提供了几个关键优势：1）准确识别和分离底层内容中的反射组件，2）在去除现实世界场景中常见的密集反射方面的鲁棒性能，3）在不同条件下的强泛化性。总的来说，这些发现验证了我们提出方法的理论合理性和实际效果。

### 4.3 消融研究

为了更好地验证我们的提示生成器和可逆网络结构的效果，我们进行了一系列消融研究，包括网络结构和提示生成器的不同设置。结果汇集在表3中。我们在左侧展示提示生成器的结果，在右侧展示网络结构的结果。

**表3：提示生成器和不同网络配置的消融研究。**

| 设置 | 提示 | 预处理 | 平均 | 设置 | 双流 | 反射损失 | 可逆性 | 平均 |
|------|------|--------|------|------|------|----------|--------|------|
|      |      |        | PSNR | SSIM |      |          |        | PSNR | SSIM |
| A | × | × | 25.52 | 0.909 | D | ✓ | ✓ | ✓ | 26.37 | 0.917 |
| B | × | ✓ | 25.99 | 0.910 | E | × | × | ✓ | 25.99 | 0.914 |
| C | ✓ | ✓ | 26.03 | 0.913 | F | × | ✓ | × | 24.05 | 0.884 |
| Ours | ✓ | × | 26.65 | 0.917 | Ours | × | ✓ | ✓ | 26.65 | 0.917 |

**关于传输率感知提示生成器的讨论**。为了将传输率告知模型，一个直接的方法是使用估计的传输率全局调整输入图像以增强它。具体来说，对于I := aT + bR + φ(T, R)，我们将输入I调整为(1/a)I := T + (b/a)R + (1/a)φ(T, R)。这个操作在表3中表示为Pre.。如表3所示，如果我们移除所有传输率感知技术（设置A），平均性能下降1.13 dB。如果我们采用上述描述的直接方法（设置B），性能恢复0.47 dB。这证实了将传输率信息告知模型的重要性。

然而，正如我们在第3.2节中分析的，直接调整输入图像远非最优。由于在某些场景中估计的潜在不准确性，直接调整模型可能引入在第二阶段训练期间难以纠正的额外偏移。更微妙和灵活的方法是使用我们的传输率感知提示重新加权特征通道。

为了验证这一点，我们既调整输入又向特征添加传输率感知提示（设置C）。性能与设置B几乎相同，表明调整输入使模型难以从错误估计中恢复。最后，我们具有提出的传输率感知提示的模型超过所有变体，证明了其效果。

**关于模型设计的讨论**。为了验证我们解耦模型设计的合理性，我们创建了三个新的模型变体。我们将RDNet修改为DSRNet风格的模型，其中两个流在单列中分别估计传输和反射，并彼此交互。这个变体表示为双流（设置D）。如表3所示，即使使用双倍计算量，性能仍然下降0.28 dB。这证实了我们解耦设计相对于双流设计的优越性。其次，我们移除了内容损失函数（方程5）中的反射部分（c₁‖R̂-R‖₂²），在训练过程中只留下传输部分（c₀‖T̂-T‖₂² + c₂‖∇T̂-∇T‖₁）。这个变体表示为反射损失（设置E）。可以观察到0.66dB的性能下降。这证实了反射损失函数的必要性。没有预测另一个组件的正则化，网络在单流特征图中清楚识别两个组件的能力减弱。

为了验证网络可逆性在反射去除任务中的必要性，我们用U-Net连接（Ronneberger et al., 2015）替换可逆连接（设置F）。虽然它需要稍多的参数和更多内存，但可以发现2.6 dB的大规模性能下降，表明可逆性设计的重要性。

## 5 结论

在本文中，我们提出了RDNet，这是一种解决单图像反射去除任务中关键挑战的新颖模型。具体来说，RDNet解决了多尺度预训练分层信息利用不足和特征解耦过程中信息丢失的限制。多列可逆结构能够保存丰富的语义特征，然后在每列的多尺度处理中有效利用这些特征。此外，提出的传输率感知提示生成器缓解了复杂反射参数与有限训练数据之间的固有冲突。通过这些创新，RDNet展现了增强的鲁棒反射去除能力。我们的方法在一系列真实世界基准数据集上相对于最先进技术表现出优越性能，突出了其在多样化反射场景中的鲁棒性和适应性。消融研究进一步验证了我们关键贡献的有效性，确认了我们设计选择的优势。我们的工作为反射去除研究开辟了新途径，并有可能显著影响计算机视觉和图像处理中的各种应用。

## 致谢

本工作得到国家自然科学基金资助，项目编号62372251和62072327。Mingjia Li同时得到来自TPU研究云（TRC）的Cloud TPU支持。

## 参考文献

[完整的参考文献列表包含所有引用的论文，从Yoshua Bengio等人到Yurui Zhu等人，共40+篇参考文献]

## 附录

### A 关于TAPG的进一步讨论

![图5：均方误差（MSE）缺点的可视化。颜色偏移和噪声退化相对于真实值表现出相同的MSE。](图5说明)

如图5中纯白图像的玩具可视化所示，尽管颜色偏差和噪声相对于真实值表现出相同的均方误差（MSE），但线性估计可以立即纠正图像的颜色偏移，而噪声需要更复杂的操作来解决。MSE和平均绝对误差（MAE）等指标难以迫使网络有效识别和纠正物理公式化中的线性退化。在这种情况下，通过使用传输率感知提示预校准特征，我们可以显著减轻线性退化（如颜色和强度不一致）的影响。

### B 定性比较

**更多视觉案例**。我们展示了总共九个额外案例：来自Real20数据集的两个案例（图9），来自Solid数据集的三个案例（图7），来自Postcard数据集的两个案例（图8），以及我们捕获的两个现实世界案例（图6）。如图所示，我们的方法擅长揭示被反射遮挡的信息，并且在去除大部分反射方面非常有效。

![图6：我们与最先进方法在现实世界样本上的估计传输层视觉比较。](图6说明)

### C 额外实验

**列数的消融研究**。在这项研究中，我们调查了列数变化对整体性能的影响（表4）。具体来说，我们调整了第一个PHE列之后的列数，实验了2、4和6列的配置。我们的发现表明，4列的配置产生最高性能。相比之下，2列和6列的配置分别导致PSNR下降0.4dB和0.46dB。这表明存在最优平衡，太少或太多的列都可能影响模型性能。

**表4：改变列数的实验。最佳结果以粗体标示。**

| 列数 | 平均 |
|------|------|
|      | PSNR | SSIM |
| 2 | 26.25 | 0.914 |
| **4** | **26.65** | **0.917** |
| 6 | 26.19 | 0.910 |

[图7-9：额外的视觉比较图，展示我们方法与其他最先进方法在Objects、Postcard和Real20数据集上的比较结果]

---

*∗共同贡献  
†通讯作者*
